name: Nextcloud Docker release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: Nextcloud SemVer tag to build and publish (MAJOR.MINOR.PATCH)

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.tag }}
      new: ${{ steps.verify.outputs.new }}

    steps:
      - name: Validate SemVer Tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: validate_version
        run: |
          TAG="${{ github.event.inputs.tag }}"
          if [[ ! "$TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format: $TAG"
            exit 1
          fi

      - name: Nextcloud Docker release
        id: release
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            API_URL="https://api.github.com/repos/nextcloud/server/releases/tags/v${{ github.event.inputs.tag }}"
          else
            API_URL="https://api.github.com/repos/nextcloud/server/releases/latest"
          fi

          TAG=$(curl -s --fail "$API_URL" | jq -r .tag_name || echo "unknown")

          if [[ "$TAG" == "null" || -z "$TAG" || "$TAG" == "unknown" ]]; then
            echo "Failed to fetch release from \"$API_URL\". Exiting..."
            exit 1
          fi

          echo "tag=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: verify
        run: |
          RESPONSE=$(curl -s -o /dev/null -I -w "%{http_code}" "https://hub.docker.com/v2/namespaces/library/repositories/nextcloud/tags/$LATEST_RELEASE")
          if [ "$RESPONSE" -eq 200 ]; then
            echo "new=false" >> $GITHUB_OUTPUT
          else
            echo "new=true" >> $GITHUB_OUTPUT
          fi

  publish-release:
    runs-on: ubuntu-latest
    needs: check-release
    if: ${{ needs.check-release.outputs.new == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/nextcloud-docker
          tags: |
            type=semver,pattern={{version}},value=${{ needs.check-release.outputs.tag }}
            type=semver,pattern={{major}},value=${{ needs.check-release.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.check-release.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ needs.check-release.outputs.tag }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            NEXTCLOUD_VERSION=${{ needs.check-release.outputs.tag }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
